d[,names(d)!='a']
d[,names(d)!='b']
d['c']=c(5,6)
d
ncol(d)
Obj <- prcomp(~ Murder + Assault + Rape, data = USArrests, scale = TRUE)
USArrests <-load(USArrests)
USArrests <-data(USArrests)
summary(USArrests)
load(USArrests)
data("USArrests")
summary(USArrests)
head(USArrests)
head(Obj$x)
class(Obj$x)
?as.data.frame
x <- predict(Obj, USArrests)
class()
class(x)
head(x)
cbind.data.frame(USArrests,USArrests)
d2=cbind.data.frame(USArrests,USArrests)
d2=cbind(USArrests,USArrests)
class(d2)
edit(zeroinfl)
Obj$a
edit(zeroinfl.control)
edit(zeroinfl.control)
edit(model_offset_2)
?model_offset_2
edit(zeroinfl.control())
edit(zeroinfl.control
)
edit(zeroinfl.control)
.Machine$double.eps
.Machine$double.eps^(1/1.6)
1e-10
1>0 | 3>5
1>4 | 3>5
source('~/CrimeProject/SpatioTemporalPredictiveModeling/ModelSegmentation/FitPredModel2.R', echo=TRUE)
?dpois
dpois(1,7)
dpois(1,8)
?model.matrix
?unique()
d <- data.frame(a=c(1,2,3),b=(1,1,1))
d <- data.frame(a=c(1,2,3),b=c(1,1,1))
sapply(a,function(x) length(unique(x))==1)
sapply(d,function(x) length(unique(x))==1)
id <- sapply(d,function(x) length(unique(x))==1)
d[id]
d[!id]
d[,!id]
a <- zeros(3)
a <- repeat(0,3)
?repeat
d
a <- matrix(c(T,F,T,F),2,2)
a
a <- matrix(c(T,T,F,F),2,2)
a
a <- matrix(c(T,F,F,T),2,2)
a
b <- matrix(c(T,T,F,F),2,2)
b
a & b
a | b
x=rep(c(T,F),2)
x
x=matrix(rep(c(T,F),2),2,2)
x
x=matrix(rep(c(T,F),2),nrow=2,ncol=3)
x=matrix(rep(c(T,F),3),nrow=2,ncol=3)
x
a='abc'
b=list(abc=c(1,2,3),d=3)
b$a
b$x
x<-c(3,3,4,1,2,2)
unique(x)
?unique
sort(unique(x))
a=0
b=list(0=c(1,2,3),d=3)
a=c(c(1,2,3),'ad')
str(1)
x=str(1)
x
as.char(1)
as.character(1)
b=list(x=c(1,2,3),d=3)
b['x']
x=vector("list",3)
x$a=c(12,3)
x$b=1
x$c=3
x
x$1
?vector
x=vector("list",3)
x
x[1]=c(1,23)
x$1
x[[1]]
x[[1]]=c(1,2)
x[[2]]=2
x[[4]]
x[[3]]
x[[3]]=34
x
?rep
matrix(c(1,2,3))
x=matrix(c(1,2,3))
length(x)
df=data.frame(x=c(1,2,3),y=c(4,5,6))
nrow(df[c(F,F,F),])
?sample
?qnorm
setwd("/Users/xiaomuliu/CrimeProject/RegionEval/")
load('Test2014_new.RData')
metrics <- c('MSE','MAPE')
metricNames <- c('MSE','MAPE%')
for (j in 1:length(metrics)){
par(mfrow=c(1,1),mar=c(5.1, 4.1, 4.1, 2.1),pty='m')
# reshape to contingency-table form (long-format to wide-format)
EvalResults.district_wide <- stats::reshape(EvalResults.district[,c('DISTRICT','MODEL',metrics[j])],direction='wide',v.names=metrics[j],timevar='DISTRICT',idvar='MODEL')
names(EvalResults.district_wide)[-1] <- as.character(sort(unique(EvalResults.district$DISTRICT)))
barplot(as.matrix(EvalResults.district_wide[,-1]), xlab="DISTRICT",ylab=metricNames[j],
col=rainbow(length(models)), beside=TRUE)
par(new=TRUE)
plot(0, 0, type="n", bty="n", xaxt="n", yaxt="n",xlab="",ylab="")
legend(x="top",inset=c(0,0), legend=models, pch=15, col=rainbow(length(models)),
cex=1.2, horiz=TRUE,xpd=TRUE)
}
metrics <- c('MSE','MAPE')
metricNames <- c('MSE','MdAPE%')
modelNames <- c('Proposed Model','Baseline 1','Baseline 2','Baseline 3','Baseline 4')
for (j in 1:length(metrics)){
par(mfrow=c(1,1),mar=c(5.1, 4.1, 4.1, 2.1),pty='m')
# reshape to contingency-table form (long-format to wide-format)
EvalResults.district_wide <- stats::reshape(EvalResults.district[,c('DISTRICT','MODEL',metrics[j])],direction='wide',v.names=metrics[j],timevar='DISTRICT',idvar='MODEL')
names(EvalResults.district_wide)[-1] <- as.character(sort(unique(EvalResults.district$DISTRICT)))
barplot(as.matrix(EvalResults.district_wide[,-1]), xlab="DISTRICT",ylab=metricNames[j],
col=rainbow(length(models)), beside=TRUE, cex.lab=1.3)
par(new=TRUE)
plot(0, 0, type="n", bty="n", xaxt="n", yaxt="n",xlab="",ylab="")
legend(x="topleft",inset=c(-0.3,0), bty="n",legend=modelNames, pch=15, col=rainbow(length(models)),
cex=1.2, horiz=TRUE,xpd=TRUE)
}
metrics <- c('MSE','MAPE')
metricNames <- c('MSE','MdAPE%')
modelNames <- c('Proposed Model','Baseline 1','Baseline 2','Baseline 3','Baseline 4')
for (j in 1:length(metrics)){
par(mfrow=c(1,1),mar=c(5.1, 4.1, 4.1, 2.1),pty='m')
# reshape to contingency-table form (long-format to wide-format)
EvalResults.district_wide <- stats::reshape(EvalResults.district[,c('DISTRICT','MODEL',metrics[j])],direction='wide',v.names=metrics[j],timevar='DISTRICT',idvar='MODEL')
names(EvalResults.district_wide)[-1] <- as.character(sort(unique(EvalResults.district$DISTRICT)))
barplot(as.matrix(EvalResults.district_wide[,-1]), xlab="DISTRICT",ylab=metricNames[j],
col=rainbow(length(models)), beside=TRUE, cex.lab=1.3)
# par(new=TRUE)
# plot(0, 0, type="n", bty="n", xaxt="n", yaxt="n",xlab="",ylab="")
legend(x="topleft",inset=c(-0.3,0), bty="n",legend=modelNames, pch=15, col=rainbow(length(models)),
cex=1.2, horiz=TRUE,xpd=TRUE)
}
metrics <- c('MSE','pMSE')
metricNames <- c('MSE','MSE%')
distNums <- c('007','011')
modelNames <- c('Prediction', 'Baseline 1', 'Baseline 2', 'Baseline 3', 'Baseline 4')
for (i in distNums){
for (j in 1:length(metrics)){
par(mfrow=c(1,1),mar=c(5.1, 4.1, 4.1, 2.1),pty='s')
E <- subset(EvalResults.district,DISTRICT==i,metrics[j])
barplot(unname(as.matrix(E)), space=0.5, xlab="Model",ylab=metricNames[j],
main=paste('DISTRICT',i), col=rainbow(length(models)), beside=TRUE)
# par(new=TRUE)
# plot(0, 0, type="n", bty="n", xaxt="n", yaxt="n",xlab="",ylab="")
legend(x="topleft", inset=c(-0.3,0),  bty="n", legend=modelNames, pch=15, col=rainbow(length(models)),
cex=1, horiz=FALSE, xpd=TRUE)
}
}
metrics <- c('MSE','MAPE')
metricNames <- c('MSE','MdAPE%')
modelNames <- c('Proposed Model','Baseline 1','Baseline 2','Baseline 3','Baseline 4')
for (j in 1:length(metrics)){
par(mfrow=c(1,1),mar=c(5.1, 4.1, 4.1, 2.1),pty='m')
# reshape to contingency-table form (long-format to wide-format)
EvalResults.district_wide <- stats::reshape(EvalResults.district[,c('DISTRICT','MODEL',metrics[j])],direction='wide',v.names=metrics[j],timevar='DISTRICT',idvar='MODEL')
names(EvalResults.district_wide)[-1] <- as.character(sort(unique(EvalResults.district$DISTRICT)))
barplot(as.matrix(EvalResults.district_wide[,-1]), xlab="DISTRICT",ylab=metricNames[j],
col=rainbow(length(models)), beside=TRUE, cex.lab=1.3)
# par(new=TRUE)
# plot(0, 0, type="n", bty="n", xaxt="n", yaxt="n",xlab="",ylab="")
legend(x="topright",inset=c(-0.3,0), bty="n",legend=modelNames, pch=15, col=rainbow(length(models)),
cex=1.2, horiz=TRUE,xpd=TRUE)
}
metrics <- c('MSE','MAPE')
metricNames <- c('MSE','MdAPE%')
modelNames <- c('Proposed Model','Baseline 1','Baseline 2','Baseline 3','Baseline 4')
for (j in 1:length(metrics)){
par(mfrow=c(1,1),mar=c(5.1, 4.1, 4.1, 2.1),pty='m')
# reshape to contingency-table form (long-format to wide-format)
EvalResults.district_wide <- stats::reshape(EvalResults.district[,c('DISTRICT','MODEL',metrics[j])],direction='wide',v.names=metrics[j],timevar='DISTRICT',idvar='MODEL')
names(EvalResults.district_wide)[-1] <- as.character(sort(unique(EvalResults.district$DISTRICT)))
barplot(as.matrix(EvalResults.district_wide[,-1]), xlab="DISTRICT",ylab=metricNames[j],
col=rainbow(length(models)), beside=TRUE, cex.lab=1.3)
# par(new=TRUE)
# plot(0, 0, type="n", bty="n", xaxt="n", yaxt="n",xlab="",ylab="")
legend(x="topright",inset=c(-0.3,0), bty="n",legend=modelNames, pch=15, col=rainbow(length(models)),
cex=1.2, horiz=FALSE,xpd=TRUE)
}
for (j in 1:length(metrics)){
par(mfrow=c(1,1),mar=c(5.1, 4.1, 4.1, 2.1),pty='m')
# reshape to contingency-table form (long-format to wide-format)
EvalResults.district_wide <- stats::reshape(EvalResults.district[,c('DISTRICT','MODEL',metrics[j])],direction='wide',v.names=metrics[j],timevar='DISTRICT',idvar='MODEL')
names(EvalResults.district_wide)[-1] <- as.character(sort(unique(EvalResults.district$DISTRICT)))
barplot(as.matrix(EvalResults.district_wide[,-1]), xlab="DISTRICT",ylab=metricNames[j],
col=rainbow(length(models)), beside=TRUE, cex.lab=1.3)
# par(new=TRUE)
# plot(0, 0, type="n", bty="n", xaxt="n", yaxt="n",xlab="",ylab="")
legend(x="topright",inset=c(0,0.3), bty="n",legend=modelNames, pch=15, col=rainbow(length(models)),
cex=1.2, horiz=FALSE,xpd=TRUE)
}
metrics <- c('MSE','MAPE')
metricNames <- c('MSE','MdAPE%')
modelNames <- c('Proposed Model','Baseline 1','Baseline 2','Baseline 3','Baseline 4')
for (j in 1:length(metrics)){
par(mfrow=c(1,1),mar=c(5.1, 4.1, 4.1, 2.1),pty='m')
# reshape to contingency-table form (long-format to wide-format)
EvalResults.district_wide <- stats::reshape(EvalResults.district[,c('DISTRICT','MODEL',metrics[j])],direction='wide',v.names=metrics[j],timevar='DISTRICT',idvar='MODEL')
names(EvalResults.district_wide)[-1] <- as.character(sort(unique(EvalResults.district$DISTRICT)))
barplot(as.matrix(EvalResults.district_wide[,-1]), xlab="DISTRICT",ylab=metricNames[j],
col=rainbow(length(models)), beside=TRUE, cex.lab=1.3)
# par(new=TRUE)
# plot(0, 0, type="n", bty="n", xaxt="n", yaxt="n",xlab="",ylab="")
legend(x="topright",inset=c(0,-0.3), bty="n",legend=modelNames, pch=15, col=rainbow(length(models)),
cex=1.2, horiz=FALSE,xpd=TRUE)
}
for (j in 1:length(metrics)){
par(xpd = T, mar = par()$mar + c(0,0,0,7))
# reshape to contingency-table form (long-format to wide-format)
EvalResults.district_wide <- stats::reshape(EvalResults.district[,c('DISTRICT','MODEL',metrics[j])],direction='wide',v.names=metrics[j],timevar='DISTRICT',idvar='MODEL')
names(EvalResults.district_wide)[-1] <- as.character(sort(unique(EvalResults.district$DISTRICT)))
barplot(as.matrix(EvalResults.district_wide[,-1]), xlab="DISTRICT",ylab=metricNames[j],
col=rainbow(length(models)), beside=TRUE, cex.lab=1.3)
# par(new=TRUE)
# plot(0, 0, type="n", bty="n", xaxt="n", yaxt="n",xlab="",ylab="")
legend(x="topright", legend=modelNames, pch=15, col=rainbow(length(models)),
cex=1.2, horiz=FALSE,xpd=TRUE)
par(mar=c(5, 4, 4, 2) + 0.1)
}
for (j in 1:length(metrics)){
par(xpd = T, mar = par()$mar + c(0,0,0,7))
# reshape to contingency-table form (long-format to wide-format)
EvalResults.district_wide <- stats::reshape(EvalResults.district[,c('DISTRICT','MODEL',metrics[j])],direction='wide',v.names=metrics[j],timevar='DISTRICT',idvar='MODEL')
names(EvalResults.district_wide)[-1] <- as.character(sort(unique(EvalResults.district$DISTRICT)))
barplot(as.matrix(EvalResults.district_wide[,-1]), xlab="DISTRICT",ylab=metricNames[j],
col=rainbow(length(models)), beside=TRUE, cex.lab=1.3)
# par(new=TRUE)
# plot(0, 0, type="n", bty="n", xaxt="n", yaxt="n",xlab="",ylab="")
legend(x="topright", inset=c(0,0.3), legend=modelNames, pch=15, col=rainbow(length(models)),
cex=1.2, horiz=FALSE,xpd=TRUE)
par(mar=c(5, 4, 4, 2) + 0.1)
}
for (j in 1:length(metrics)){
par(xpd = T, mar = par()$mar + c(0,0,0,7))
# reshape to contingency-table form (long-format to wide-format)
EvalResults.district_wide <- stats::reshape(EvalResults.district[,c('DISTRICT','MODEL',metrics[j])],direction='wide',v.names=metrics[j],timevar='DISTRICT',idvar='MODEL')
names(EvalResults.district_wide)[-1] <- as.character(sort(unique(EvalResults.district$DISTRICT)))
barplot(as.matrix(EvalResults.district_wide[,-1]), xlab="DISTRICT",ylab=metricNames[j],
col=rainbow(length(models)), beside=TRUE, cex.lab=1.3)
# par(new=TRUE)
# plot(0, 0, type="n", bty="n", xaxt="n", yaxt="n",xlab="",ylab="")
legend(x="topright", inset=c(0,-0.3), legend=modelNames, pch=15, col=rainbow(length(models)),
cex=1.2, horiz=FALSE,xpd=TRUE)
par(mar=c(5, 4, 4, 2) + 0.1)
}
for (j in 1:length(metrics)){
par(xpd = T, mar = par()$mar + c(0,0,0,7))
# reshape to contingency-table form (long-format to wide-format)
EvalResults.district_wide <- stats::reshape(EvalResults.district[,c('DISTRICT','MODEL',metrics[j])],direction='wide',v.names=metrics[j],timevar='DISTRICT',idvar='MODEL')
names(EvalResults.district_wide)[-1] <- as.character(sort(unique(EvalResults.district$DISTRICT)))
barplot(as.matrix(EvalResults.district_wide[,-1]), xlab="DISTRICT",ylab=metricNames[j],
col=rainbow(length(models)), beside=TRUE, cex.lab=1.3)
# par(new=TRUE)
# plot(0, 0, type="n", bty="n", xaxt="n", yaxt="n",xlab="",ylab="")
legend(x="topright", inset=c(0,-0.1), legend=modelNames, pch=15, col=rainbow(length(models)),
cex=1.2, horiz=FALSE,xpd=TRUE)
par(mar=c(5, 4, 4, 2) + 0.1)
}
for (j in 1:length(metrics)){
par(xpd = T, mar = par()$mar + c(0,0,0,7))
# reshape to contingency-table form (long-format to wide-format)
EvalResults.district_wide <- stats::reshape(EvalResults.district[,c('DISTRICT','MODEL',metrics[j])],direction='wide',v.names=metrics[j],timevar='DISTRICT',idvar='MODEL')
names(EvalResults.district_wide)[-1] <- as.character(sort(unique(EvalResults.district$DISTRICT)))
barplot(as.matrix(EvalResults.district_wide[,-1]), xlab="DISTRICT",ylab=metricNames[j],
col=rainbow(length(models)), beside=TRUE, cex.lab=1.3)
# par(new=TRUE)
# plot(0, 0, type="n", bty="n", xaxt="n", yaxt="n",xlab="",ylab="")
legend(x="topright", inset=c(-0.2,-0.15), legend=modelNames, pch=15, col=rainbow(length(models)),
cex=1.2, horiz=FALSE,xpd=TRUE)
par(mar=c(5, 4, 4, 2) + 0.1)
}
for (j in 1:length(metrics)){
par(xpd = T, mar = par()$mar + c(0,0,0,7))
# reshape to contingency-table form (long-format to wide-format)
EvalResults.district_wide <- stats::reshape(EvalResults.district[,c('DISTRICT','MODEL',metrics[j])],direction='wide',v.names=metrics[j],timevar='DISTRICT',idvar='MODEL')
names(EvalResults.district_wide)[-1] <- as.character(sort(unique(EvalResults.district$DISTRICT)))
barplot(as.matrix(EvalResults.district_wide[,-1]), xlab="DISTRICT",ylab=metricNames[j],
col=rainbow(length(models)), beside=TRUE, cex.lab=1.3)
# par(new=TRUE)
# plot(0, 0, type="n", bty="n", xaxt="n", yaxt="n",xlab="",ylab="")
legend(x="topright", inset=c(-0.1,-0.15), legend=modelNames, pch=15, col=rainbow(length(models)),
cex=1.2, horiz=FALSE,xpd=TRUE)
par(mar=c(5, 4, 4, 2) + 0.1)
}
for (j in 1:length(metrics)){
par(xpd = T, mar = par()$mar + c(0,0,0,7))
# reshape to contingency-table form (long-format to wide-format)
EvalResults.district_wide <- stats::reshape(EvalResults.district[,c('DISTRICT','MODEL',metrics[j])],direction='wide',v.names=metrics[j],timevar='DISTRICT',idvar='MODEL')
names(EvalResults.district_wide)[-1] <- as.character(sort(unique(EvalResults.district$DISTRICT)))
barplot(as.matrix(EvalResults.district_wide[,-1]), xlab="DISTRICT",ylab=metricNames[j],
col=rainbow(length(models)), beside=TRUE, cex.lab=1.3)
# par(new=TRUE)
# plot(0, 0, type="n", bty="n", xaxt="n", yaxt="n",xlab="",ylab="")
legend(x="topright", inset=c(-0.0.5,-0.15), legend=modelNames, pch=15, col=rainbow(length(models)),
cex=1.2, horiz=FALSE,xpd=TRUE)
par(mar=c(5, 4, 4, 2) + 0.1)
}
for (j in 1:length(metrics)){
par(xpd = T, mar = par()$mar + c(0,0,0,7))
# reshape to contingency-table form (long-format to wide-format)
EvalResults.district_wide <- stats::reshape(EvalResults.district[,c('DISTRICT','MODEL',metrics[j])],direction='wide',v.names=metrics[j],timevar='DISTRICT',idvar='MODEL')
names(EvalResults.district_wide)[-1] <- as.character(sort(unique(EvalResults.district$DISTRICT)))
barplot(as.matrix(EvalResults.district_wide[,-1]), xlab="DISTRICT",ylab=metricNames[j],
col=rainbow(length(models)), beside=TRUE, cex.lab=1.3)
# par(new=TRUE)
# plot(0, 0, type="n", bty="n", xaxt="n", yaxt="n",xlab="",ylab="")
legend(x="topright", inset=c(-0.05,-0.15), legend=modelNames, pch=15, col=rainbow(length(models)),
cex=1.2, horiz=FALSE,xpd=TRUE)
par(mar=c(5, 4, 4, 2) + 0.1)
}
names(EvalResults.district_wide)
names(EvalResults.district_wide[2:])
names(EvalResults.district_wide)[2:]
names(EvalResults.district_wide)[2:ncols(EvalResults.district_wide)]
?ncol
names(EvalResults.district_wide)[2:ncol(EvalResults.district_wide)]
for (j in 1:length(metrics)){
par(xpd = T, mar = par()$mar + c(0,0,0,7))
# reshape to contingency-table form (long-format to wide-format)
EvalResults.district_wide <- stats::reshape(EvalResults.district[,c('DISTRICT','MODEL',metrics[j])],direction='wide',v.names=metrics[j],timevar='DISTRICT',idvar='MODEL')
names(EvalResults.district_wide)[-1] <- as.character(sort(unique(EvalResults.district$DISTRICT)))
barplot(as.matrix(EvalResults.district_wide[,-1]), xlab="DISTRICT",ylab=metricNames[j],
col=rainbow(length(models)), beside=TRUE, cex.lab=1.3)
axis(1,labels=names(EvalResults.district_wide)[2:ncol(EvalResults.district_wide)])
# par(new=TRUE)
# plot(0, 0, type="n", bty="n", xaxt="n", yaxt="n",xlab="",ylab="")
legend(x="topright", inset=c(-0.1,-0.15), legend=modelNames, pch=15, col=rainbow(length(models)),
cex=1.2, horiz=FALSE,xpd=TRUE)
par(mar=c(5, 4, 4, 2) + 0.1)
}
for (j in 1:length(metrics)){
par(xpd = T, mar = par()$mar + c(0,0,0,7))
# reshape to contingency-table form (long-format to wide-format)
EvalResults.district_wide <- stats::reshape(EvalResults.district[,c('DISTRICT','MODEL',metrics[j])],direction='wide',v.names=metrics[j],timevar='DISTRICT',idvar='MODEL')
names(EvalResults.district_wide)[-1] <- as.character(sort(unique(EvalResults.district$DISTRICT)))
barplot(as.matrix(EvalResults.district_wide[,-1]), xlab="DISTRICT",ylab=metricNames[j],
col=rainbow(length(models)), beside=TRUE, cex.lab=1.3)
axis(1,at=1:ncol(EvalResults.district_wide)-1,labels=names(EvalResults.district_wide)[2:ncol(EvalResults.district_wide)])
# par(new=TRUE)
# plot(0, 0, type="n", bty="n", xaxt="n", yaxt="n",xlab="",ylab="")
legend(x="topright", inset=c(-0.1,-0.15), legend=modelNames, pch=15, col=rainbow(length(models)),
cex=1.2, horiz=FALSE,xpd=TRUE)
par(mar=c(5, 4, 4, 2) + 0.1)
}
for (j in 1:length(metrics)){
par(xpd = T, mar = par()$mar + c(0,0,0,7))
# reshape to contingency-table form (long-format to wide-format)
EvalResults.district_wide <- stats::reshape(EvalResults.district[,c('DISTRICT','MODEL',metrics[j])],direction='wide',v.names=metrics[j],timevar='DISTRICT',idvar='MODEL')
names(EvalResults.district_wide)[-1] <- as.character(sort(unique(EvalResults.district$DISTRICT)))
barplot(as.matrix(EvalResults.district_wide[,-1]), xlab="DISTRICT",ylab=metricNames[j],
col=rainbow(length(models)), beside=TRUE, cex.lab=1.3)
axis(1,at=0:ncol(EvalResults.district_wide)-1,labels=names(EvalResults.district_wide)[2:ncol(EvalResults.district_wide)])
# par(new=TRUE)
# plot(0, 0, type="n", bty="n", xaxt="n", yaxt="n",xlab="",ylab="")
legend(x="topright", inset=c(-0.1,-0.15), legend=modelNames, pch=15, col=rainbow(length(models)),
cex=1.2, horiz=FALSE,xpd=TRUE)
par(mar=c(5, 4, 4, 2) + 0.1)
}
for (j in 1:length(metrics)){
par(xpd = T, mar = par()$mar + c(0,0,0,7))
# reshape to contingency-table form (long-format to wide-format)
EvalResults.district_wide <- stats::reshape(EvalResults.district[,c('DISTRICT','MODEL',metrics[j])],direction='wide',v.names=metrics[j],timevar='DISTRICT',idvar='MODEL')
names(EvalResults.district_wide)[-1] <- as.character(sort(unique(EvalResults.district$DISTRICT)))
barplot(as.matrix(EvalResults.district_wide[,-1]), xlab="DISTRICT",ylab=metricNames[j],
col=rainbow(length(models)), beside=TRUE, cex.lab=1.3)
axis(1,at=1:ncol(EvalResults.district_wide),labels=names(EvalResults.district_wide)[2:ncol(EvalResults.district_wide)])
# par(new=TRUE)
# plot(0, 0, type="n", bty="n", xaxt="n", yaxt="n",xlab="",ylab="")
legend(x="topright", inset=c(-0.1,-0.15), legend=modelNames, pch=15, col=rainbow(length(models)),
cex=1.2, horiz=FALSE,xpd=TRUE)
par(mar=c(5, 4, 4, 2) + 0.1)
}
par(mar=c(5, 4, 4, 2) + 0.1)
1:ncol(EvalResults.district_wide)-1
par(mar=c(5, 4, 4, 2) + 0.1)
for (j in 1:length(metrics)){
par(xpd = T, mar = par()$mar + c(0,0,0,7))
# reshape to contingency-table form (long-format to wide-format)
EvalResults.district_wide <- stats::reshape(EvalResults.district[,c('DISTRICT','MODEL',metrics[j])],direction='wide',v.names=metrics[j],timevar='DISTRICT',idvar='MODEL')
names(EvalResults.district_wide)[-1] <- as.character(sort(unique(EvalResults.district$DISTRICT)))
barplot(as.matrix(EvalResults.district_wide[,-1]), xlab="DISTRICT",ylab=metricNames[j],
col=rainbow(length(models)), beside=TRUE, cex.lab=1.3)
axis(1,at=1:(ncol(EvalResults.district_wide)-1),labels=names(EvalResults.district_wide)[2:ncol(EvalResults.district_wide)])
# par(new=TRUE)
# plot(0, 0, type="n", bty="n", xaxt="n", yaxt="n",xlab="",ylab="")
legend(x="topright", inset=c(-0.1,-0.15), legend=modelNames, pch=15, col=rainbow(length(models)),
cex=1.2, horiz=FALSE,xpd=TRUE)
par(mar=c(5, 4, 4, 2) + 0.1)
}
par(mar=c(5, 4, 4, 2) + 0.1)
for (j in 1:length(metrics)){
par(xpd = T, mar = par()$mar + c(0,0,0,7))
# reshape to contingency-table form (long-format to wide-format)
EvalResults.district_wide <- stats::reshape(EvalResults.district[,c('DISTRICT','MODEL',metrics[j])],direction='wide',v.names=metrics[j],timevar='DISTRICT',idvar='MODEL')
names(EvalResults.district_wide)[-1] <- as.character(sort(unique(EvalResults.district$DISTRICT)))
barplot(as.matrix(EvalResults.district_wide[,-1]), xlab="DISTRICT",ylab=metricNames[j],
col=rainbow(length(models)), beside=TRUE, cex.lab=1.3)
# axis(1,at=1:(ncol(EvalResults.district_wide)-1),labels=names(EvalResults.district_wide)[2:ncol(EvalResults.district_wide)])
axis(1,cex.axis=0.8)
# par(new=TRUE)
# plot(0, 0, type="n", bty="n", xaxt="n", yaxt="n",xlab="",ylab="")
legend(x="topright", inset=c(-0.1,-0.15), legend=modelNames, pch=15, col=rainbow(length(models)),
cex=1.2, horiz=FALSE,xpd=TRUE)
par(mar=c(5, 4, 4, 2) + 0.1)
}
par(mar=c(5, 4, 4, 2) + 0.1)
for (j in 1:length(metrics)){
par(xpd = T, mar = par()$mar + c(0,0,0,7))
# reshape to contingency-table form (long-format to wide-format)
EvalResults.district_wide <- stats::reshape(EvalResults.district[,c('DISTRICT','MODEL',metrics[j])],direction='wide',v.names=metrics[j],timevar='DISTRICT',idvar='MODEL')
names(EvalResults.district_wide)[-1] <- as.character(sort(unique(EvalResults.district$DISTRICT)))
barplot(as.matrix(EvalResults.district_wide[,-1]), xlab="DISTRICT",ylab=metricNames[j],
col=rainbow(length(models)), beside=TRUE, cex.lab=1.3)
# axis(1,at=1:(ncol(EvalResults.district_wide)-1),labels=names(EvalResults.district_wide)[2:ncol(EvalResults.district_wide)])
axis(1,cex.axis=0.8)
# par(new=TRUE)
# plot(0, 0, type="n", bty="n", xaxt="n", yaxt="n",xlab="",ylab="")
legend(x="topright", inset=c(-0.1,-0.15), legend=modelNames, pch=15, col=rainbow(length(models)),
cex=1.2, horiz=FALSE,xpd=TRUE)
par(mar=c(5, 4, 4, 2) + 0.1)
}
par(mar=c(5, 4, 4, 2) + 0.1)
for (j in 1:length(metrics)){
par(xpd = T, mar = par()$mar + c(0,0,0,7))
# reshape to contingency-table form (long-format to wide-format)
EvalResults.district_wide <- stats::reshape(EvalResults.district[,c('DISTRICT','MODEL',metrics[j])],direction='wide',v.names=metrics[j],timevar='DISTRICT',idvar='MODEL')
names(EvalResults.district_wide)[-1] <- as.character(sort(unique(EvalResults.district$DISTRICT)))
barplot(as.matrix(EvalResults.district_wide[,-1]), xlab="DISTRICT",ylab=metricNames[j],
col=rainbow(length(models)), beside=TRUE, cex.lab=1.3, cex.axis=0.8))
# axis(1,at=1:(ncol(EvalResults.district_wide)-1),labels=names(EvalResults.district_wide)[2:ncol(EvalResults.district_wide)])
# par(new=TRUE)
# plot(0, 0, type="n", bty="n", xaxt="n", yaxt="n",xlab="",ylab="")
legend(x="topright", inset=c(-0.1,-0.15), legend=modelNames, pch=15, col=rainbow(length(models)),
cex=1.2, horiz=FALSE,xpd=TRUE)
par(mar=c(5, 4, 4, 2) + 0.1)
}
par(mar=c(5, 4, 4, 2) + 0.1)
for (j in 1:length(metrics)){
par(xpd = T, mar = par()$mar + c(0,0,0,7))
# reshape to contingency-table form (long-format to wide-format)
EvalResults.district_wide <- stats::reshape(EvalResults.district[,c('DISTRICT','MODEL',metrics[j])],direction='wide',v.names=metrics[j],timevar='DISTRICT',idvar='MODEL')
names(EvalResults.district_wide)[-1] <- as.character(sort(unique(EvalResults.district$DISTRICT)))
barplot(as.matrix(EvalResults.district_wide[,-1]), xlab="DISTRICT",ylab=metricNames[j],
col=rainbow(length(models)), beside=TRUE, cex.lab=1.3, cex.axis=0.8)
# axis(1,at=1:(ncol(EvalResults.district_wide)-1),labels=names(EvalResults.district_wide)[2:ncol(EvalResults.district_wide)])
# par(new=TRUE)
# plot(0, 0, type="n", bty="n", xaxt="n", yaxt="n",xlab="",ylab="")
legend(x="topright", inset=c(-0.1,-0.15), legend=modelNames, pch=15, col=rainbow(length(models)),
cex=1.2, horiz=FALSE,xpd=TRUE)
par(mar=c(5, 4, 4, 2) + 0.1)
}
par(mar=c(5, 4, 4, 2) + 0.1)
for (j in 1:length(metrics)){
par(xpd = T, mar = par()$mar + c(0,0,0,7))
# reshape to contingency-table form (long-format to wide-format)
EvalResults.district_wide <- stats::reshape(EvalResults.district[,c('DISTRICT','MODEL',metrics[j])],direction='wide',v.names=metrics[j],timevar='DISTRICT',idvar='MODEL')
names(EvalResults.district_wide)[-1] <- as.character(sort(unique(EvalResults.district$DISTRICT)))
barplot(as.matrix(EvalResults.district_wide[,-1]), xlab="DISTRICT",ylab=metricNames[j],
col=rainbow(length(models)), beside=TRUE, cex.lab=1.3, cex.axis=0.5)
# axis(1,at=1:(ncol(EvalResults.district_wide)-1),labels=names(EvalResults.district_wide)[2:ncol(EvalResults.district_wide)])
# par(new=TRUE)
# plot(0, 0, type="n", bty="n", xaxt="n", yaxt="n",xlab="",ylab="")
legend(x="topright", inset=c(-0.1,-0.15), legend=modelNames, pch=15, col=rainbow(length(models)),
cex=1.2, horiz=FALSE,xpd=TRUE)
par(mar=c(5, 4, 4, 2) + 0.1)
}
par(mar=c(5, 4, 4, 2) + 0.1)
for (j in 1:length(metrics)){
par(xpd = T, mar = par()$mar + c(0,0,0,7))
# reshape to contingency-table form (long-format to wide-format)
EvalResults.district_wide <- stats::reshape(EvalResults.district[,c('DISTRICT','MODEL',metrics[j])],direction='wide',v.names=metrics[j],timevar='DISTRICT',idvar='MODEL')
names(EvalResults.district_wide)[-1] <- as.character(sort(unique(EvalResults.district$DISTRICT)))
barplot(as.matrix(EvalResults.district_wide[,-1]), xlab="DISTRICT",ylab=metricNames[j],
col=rainbow(length(models)), beside=TRUE, cex.lab=1.3)
# axis(1,at=1:(ncol(EvalResults.district_wide)-1),labels=names(EvalResults.district_wide)[2:ncol(EvalResults.district_wide)])
# par(new=TRUE)
# plot(0, 0, type="n", bty="n", xaxt="n", yaxt="n",xlab="",ylab="")
legend(x="topright", inset=c(-0.1,-0.15), legend=modelNames, pch=15, col=rainbow(length(models)),
cex=1.2, horiz=FALSE,xpd=TRUE)
par(mar=c(5, 4, 4, 2) + 0.1)
}
